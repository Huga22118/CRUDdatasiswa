<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0NDQ0ICAgIBw0HBwcHBw8IDQcNFREWFhURExMY
        HSggGBolGxMTITEhMSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg0NDQ8PDQ8rGRUZLS03Kys3KysrLS03
        LS0tNy03Ky03KystKy0tKysrKy03LS0tKystKysrKy0rKysrKyv/wAARCAC3ARMDASIAAhEBAxEB/8QA
        GwAAAwEBAQEBAAAAAAAAAAAAAAECAwQGBQf/xAAYEAEBAQEBAAAAAAAAAAAAAAAAARECEv/EABoBAQEB
        AQEBAQAAAAAAAAAAAAECAAMFBAb/xAAYEQEBAQEBAAAAAAAAAAAAAAAAARESAv/aAAwDAQACEQMRAD8A
        /Z7UnUWrj5xai07U1SoVqLTtStZUqdTSYVTVVNVFJqaqlSpFTV1NVFM6mrqapURRisLDqiwKwYG1IxWH
        jHU4WLwYG1OHi5D8jVajDkXOR5TpnpGDGnkY2rnpnhY1sLyNXPTPCxpYVhdJ6Z4F4GX0+3ai0Uq4SPz8
        KptOpUqFSBUqhUjpKVCqVUlFNTVUqykpqiVFM6nGlhYSjBi8HljqMGL8jG1tTgxeDBramQ5yqRUidbUy
        H5VIrym1tRgxc5V5GnWeFjTyeDVSssLGuFeW1c9M8TjWxNh10npngXgOr6fRTRaVqJHiwrSpaCsJpkYQ
        VMiqERhRKpsULGUzpVdicMUnBisGHWTgxWDBo1ODFYeBtTgxWHINGlIqRUisTa2oxUisORNrajDxfk5y
        Nbpngxp5HkaqVlgxpYXltXKzsTY1vKbDq56Z+QvAdXra1Oi0i8yCkCVizBGTBSAZQGGGYsLFAlFgxWBi
        jBi8GMNRgxWDBranDkVgwaNTOVYeKkSNKRUgkVE0aUipDgDDBhnAdTgxYxJ1GFY0wY2qlZYm8tcKw6uV
        jgaYR1fSKRWlrtj4YZDRqlwwlTGA4RwKOAGCQxUg8tpTgVhY2skYoNqU4MUQBHghgBUTFMAqJVE0g4Rw
        MZwhA0VDKGknBghgpwrFjAZWWBfkzq9cGjUaNfW+WHp6nQVxWnqRoVFnEynGMWqIlXzRVLBDUqCaqorJ
        oBBk0UEGBwyMA4aVRmCok4ljOEYYzhQwYcAgSVQCAMZlDFYAAM+To1Olr0McYvRqdGsqKUjRoxcXKuVl
        KqVsMayqlYyqnScU2nQ1n6PRhXaktGtgoo0tJsSoFAAZxJgKOJVAFCEYJnCNLHAIYIhgJKgIYMEMoYrA
        ABnxPQ1Glr0sfPF6fpno04uNNOVnp6MVGmqlY6foYptpzpl6HpsU29HOmM6VKMZto1lp6nBWmjUaYSs0
        acrBRp001jVEmkLgTFBjMjiaTikwwVAoaSqAobGGZQ0kEAzPP2l6Rpa9THyxp6Gs9GnFxp6P0y9HrYqN
        dGstHpsW20emPoehhbzo50wnSp01hb+lTphOlSosS3lVKxnS5U2CtIqM5TlTiWhyolPU1lymiKlFjKip
        URUqWUadUmk4aVAmZQ00qghSnATNJ6FUwWhsDzOptTek69fHxytPQ9MtHo4uVr6Hpl6HpsXK19D0y9F6
        blUbeh7Y+i9NypvOlTpzTpc6a+S6J0udOedNJ0iwOiVUrDnpc6c7A3nS5WEq5UWJayqlZyq1NDSU5USq
        iWWcRKpNK4cqJTDNDiJVIUrTScoMNUSJRilhOjRjKBaGDyepvSLS17OPhlXei9IvRXpWOkq/Q9MvQ9HF
        ytfRemXovTcqlbei9MvSfR5XG/pfPTlnTTnprC6uemnPTl56a89OVjOjnpc6c86aTpFgdHPS505+a056
        c7Eujnpcrn5rSdIsDaVUrKVcqLA005WcqtTYVqlRKabCuVWs1SpsVFynqD1JaBGnoKjRo1sbVhHomxnk
        bU3oB7UedE3ovQClwtTaAp0heivQBxcL2XoA4uHOmnPRAWKa89NOegHOxmk6aToBzsC+emkoDlQ056aT
        ogihpz0uUBzoXKqUBNY9VKAkxRgIUcp6YFI0aACNK9AHDE+gAS//2Q==
</value>
  </data>
</root>